<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>Hexo_Install_Record</title>
      <link href="/2023/01/14/hexo-install-record/"/>
      <url>/2023/01/14/hexo-install-record/</url>
      
        <content type="html"><![CDATA[<h3 id="安装npm-和Node-js"><a href="#安装npm-和Node-js" class="headerlink" title="安装npm 和Node.js"></a>安装npm 和Node.js</h3><p>略</p><p>检查是否安装成功</p><blockquote><p>node -v<br>npm -v</p></blockquote><p>添加国内镜像</p><blockquote><p>npm config set registry https:<em>&#x2F;&#x2F;registry.npm.taobao.org</em></p></blockquote><h3 id="认识Hexo"><a href="#认识Hexo" class="headerlink" title="认识Hexo"></a>认识Hexo</h3><blockquote><p>npm install -g hexo-cli<br>hexo -v</p></blockquote><p>初始化</p><blockquote><p>hexo init</p><p>npm install </p></blockquote><blockquote><p>- </p></blockquote><p>输入<code>hexo g</code>生成静态网页，然后输入<code>hexo s</code>打开本地服务器</p><blockquote><p>hexo g</p><p>hexo server(s)</p></blockquote><h3 id="github-配置"><a href="#github-配置" class="headerlink" title="github 配置"></a>github 配置</h3><p>第一次使用git后需要将用户名和邮箱进行初始化</p><blockquote><p>git config –global user.name “Y…” </p><p>git config –global user.email “<a href="mailto:&#76;&#64;&#120;&#120;&#46;&#99;&#111;&#109;">&#76;&#64;&#120;&#120;&#46;&#99;&#111;&#109;</a>“</p></blockquote><p>check</p><blockquote><p>git config user.name<br>git config user.email</p></blockquote><blockquote><p>ssh-keygen -t rsa -C “L@..”  # 生成ssh</p></blockquote><p>将输出的内容添加在github的的setting 中的 SSH and GPG kes </p><blockquote><p>cat ~&#x2F;.ssh&#x2F;id_rsa.pub</p></blockquote><p>测试 为</p><blockquote><p>ssh -T <a href="mailto:&#x67;&#x69;&#116;&#64;&#103;&#105;&#116;&#x68;&#117;&#x62;&#46;&#99;&#111;&#x6d;">&#x67;&#x69;&#116;&#64;&#103;&#105;&#116;&#x68;&#117;&#x62;&#46;&#99;&#111;&#x6d;</a>  # 出现用户名就ok</p></blockquote><h3 id="将hexo-部署到github"><a href="#将hexo-部署到github" class="headerlink" title="将hexo 部署到github"></a>将hexo 部署到github</h3><p>我们可以将<code>hexo</code>和<code>GitHub</code>关联起来，也就是将<code>hexo</code>生成的文章部署到<code>GitHub</code>上，打开博客根目录下的<code>_config.yml</code>文件</p><ul><li><p>安装部署使用到的git插件</p><blockquote><p>npm install hexo-deployer-git -save</p></blockquote></li><li><p>修改最后一行配置</p><blockquote><p>deploy:  </p><pre><code>type: git  repository: https://github.com/gaoziman/gaoziman.github.io.git  branch: master</code></pre></blockquote></li><li><p>生成 其中 <code>hexo clean</code>清除了你之前生成的东西，也可以不加。 <code>hexo generate</code>顾名思义，生成静态文章，可以用 <code>hexo g</code>缩写 ，<code>hexo deploy</code>部署文章，可以用<code>hexo d</code>缩写</p><blockquote><p>hexo clean </p><p>hexo generate </p><p>hexo deploy</p></blockquote></li></ul><h3 id="添加自定义域名"><a href="#添加自定义域名" class="headerlink" title="添加自定义域名"></a>添加自定义域名</h3><p>此处仅仅列举一些步骤，我暂时没有买域名</p><ul><li>去买域名的地方添加解析</li><li>在github中的setting 中pages中 custom domain 中添加自己的域名</li><li>github的项目根目录会出现一个CNAME的文件，如果没有的话 打开本地博客的&#x2F;source 目录， 新建<code>CNAME</code>文件，没有后缀，写上自己的域名，保存 运行hexo g， hexo d 上传github</li></ul><h3 id="写文章，发布文章"><a href="#写文章，发布文章" class="headerlink" title="写文章，发布文章"></a>写文章，发布文章</h3><p>记得安装扩展 <code>npm i hexo-deployer-git</code></p><ul><li>新建一篇文章 <code>hexo new post &quot;file_name&quot;</code></li><li>在<code>source\_posts\</code> 路径下会生成一个file_name.md 文件，但是并没有多一个文件夹（有个小bug，用typora自带的图片保存路径并不会成功显示在网页上，应该是生成网页的时候没有找到图片</li><li>hexo g | hexo s</li></ul><h3 id="hexo-进一步认识"><a href="#hexo-进一步认识" class="headerlink" title="hexo 进一步认识"></a>hexo 进一步认识</h3><h4 id="文件结构"><a href="#文件结构" class="headerlink" title="文件结构"></a>文件结构</h4><blockquote><ul><li><code>node_modules:</code> 依赖包,各种库</li><li><code>public：</code>存放生成的页面</li><li><code>scaffolds：</code>生成文章的一些模板，有三个文件，存储这新文章和新页面的初试设置</li><li><code>source：</code>用来存放你的文章，各类页面，图像等文件<ul><li>_data</li><li>_posts  <strong>重点文件</strong></li><li>about</li><li>archives</li><li>categories</li><li>friends</li><li>tags</li></ul></li><li><code>themes：</code>主题**</li><li><code>_config.yml:</code> 博客的配置文件**</li></ul></blockquote><h4 id="基本配置"><a href="#基本配置" class="headerlink" title="基本配置"></a>基本配置</h4><h5 id="base-config"><a href="#base-config" class="headerlink" title="base config"></a>base config</h5><p>文件根目录中的 _config.yml 就是整个hexo的配置文件 <a href="https://hexo.io/zh-cn/docs/configuration.html">参考</a></p><blockquote><p>author: 作者名</p><p>language: 语言</p><p>description：<code>description</code>主要用于<code>SEO</code>，告诉搜索引擎一个关于您站点的简单描述，通常建议在其中包含您网站的关键词</p><p>….</p><p>url：网址root根目录，也就是域名</p><p>permalink: 文章生成连接的格式</p><p>theme : 主题</p></blockquote><h5 id="Front-matter"><a href="#Front-matter" class="headerlink" title="Front-matter"></a>Front-matter</h5><p>是一篇文章最上方以— 分割的区域， 用于指定个别文件的变量</p><blockquote><p>title: Hexo+Github博客搭建记录 </p><p>date: 2022-05-08 15:15:44</p></blockquote><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">--- title: Hexo+Github博客搭建记录 </span><br><span class="line">date: 2022-05-08 15:15:44 </span><br><span class="line">author: name</span><br><span class="line">img: /medias/banner/7.jpg </span><br><span class="line">coverImg: /medias/banner/7.jpg </span><br><span class="line">top: true </span><br><span class="line">cover: true </span><br><span class="line">toc: true </span><br><span class="line">password: 5f15b28ffe43f8be4f239bdd9b69af9d80dbafcb20a5f0df5d1677a120ae9110 </span><br><span class="line">mathjax: true </span><br><span class="line">summary: 这是你自定义的文章摘要内容，如果这个属性有值，文章卡片摘要就显示这段文字，否则程序会自动截取文章的部分内容作为摘要 </span><br><span class="line">tags: </span><br><span class="line">- Hexo </span><br><span class="line">- Github </span><br><span class="line">- 博客 </span><br><span class="line">categories: </span><br><span class="line">- 软件安装与配置 </span><br><span class="line">---</span><br></pre></td></tr></table></figure><p>注明：分类具有顺序性和层次性，标签没有顺序和层次，标签中的 A,B 等于B,A</p><h3 id="BUGS"><a href="#BUGS" class="headerlink" title="BUGS"></a>BUGS</h3><ul><li><p>win10本来已经通过npm 安装好了hexo 然后始终 报错<code>bash: hexo: command not found</code><br>, 然后找寻解决方法是没有将node 的安装目录加入环境变量，通过以下两个命令寻找路径，</p><ul><li><p>查看node_modules的目录，执行：npm root -g</p></li><li><p>查看npm的可执行文件所在目录：npm bin -g</p><p><img src="/BlogImgs/$%7Bfiilename%7D/image-20230114081824222.png" alt="image-20230114081824222"></p><p>于是将两个路径分别添加到path，重启cmd就能正常使用hexo</p></li></ul><p><a href="https://blog.51cto.com/u_14900374/2553812">ref1</a>, <a href="https://blog.51cto.com/u_15176340/2723817">ref2</a>, ref2 中的 npx ：npx 想要解决的主要问题，就是调用项目内部安装的模块”，所以可以理解为在命令行下调用，可以让项目内部安装的模块用起来更方便，npx运行的时候，会到node_modules&#x2F;.bin路径和环境变量$PATH里面，检查命令是否存在，所以系统命令也可以调用，即上面的命令安装不成功的时候加上npx的话也许就可以成功了</p></li><li><p>OpenSSL SSL_read: Connection was reset, errno 10054 </p><p>重新检测了一下是否能与github连接 <code>ssh git@github.com</code>,  然后查找博客将config中的网址替换为ssh</p><blockquote><p><a href="https://github.com/gaoziman/gaoziman.github.io.git">https://github.com/gaoziman/gaoziman.github.io.git</a>   这个网址不行<br>替换为 hexo config deploy.repository <a href="mailto:&#x67;&#x69;&#x74;&#64;&#103;&#105;&#116;&#x68;&#x75;&#x62;&#x2e;&#99;&#111;&#x6d;">&#x67;&#x69;&#x74;&#64;&#103;&#105;&#116;&#x68;&#x75;&#x62;&#x2e;&#99;&#111;&#x6d;</a>:[yourgitname]&#x2F;[yourgitname].github.io.git</p></blockquote></li></ul><h3 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h3><ul><li><a href="https://juejin.cn/post/7095323643277738014">https://juejin.cn/post/7095323643277738014</a>: 这篇文章介绍的很详细，尤其是关于hexo的生态上，介绍了很多hexo的高级操作，但本人目前主要想要一个的可以简单的博客，后续的各种操作就没有借鉴了</li></ul><h3 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h3><p>其实还蛮简单的，因为目前我的需求并不是曝光我的网站，而只是将一些总结打包出来，所以有很多东西并没有尝试，等以后有需求一定要完善起来现将一些攻略总结如下！</p><ul><li>这篇文章对我的帮助巨巨巨大： <a href="https://juejin.cn/post/7095323643277738014">https://juejin.cn/post/7095323643277738014</a> 剩下的包括一些速度优化，评论，网站推广等一些细节等还没有尝试</li><li>matery 的官网文档 <a href="https://github.com/blinkfox/hexo-theme-matery/blob/develop/README_CN.md">https://github.com/blinkfox/hexo-theme-matery/blob/develop/README_CN.md</a> 但是最重要的还是要对主题中的_config.yml 进行阅读，其中已经比较详细</li><li>在这个人写的博客中也有一些东西， 但是没有太多关注 <a href="https://developer.aliyun.com/profile/expert/z3jcatjk57fiu">https://developer.aliyun.com/profile/expert/z3jcatjk57fiu</a></li><li>这是一位大佬的博客，挺好看的，我借鉴他的博客改了一下背景，后续仍然可以参考优化 <a href="https://github.com/godweiyang/hexo-theme-sungod">https://github.com/godweiyang/hexo-theme-sungod</a> 展示<a href="https://godweiyang.com/">地址</a></li><li>是个大佬，但是没有仔细膜拜，他的页面很简洁，挺好看 <a href="https://www.cnblogs.com/all-smile/p/16608503.html#hexo%E4%B8%BB%E9%A2%98">https://www.cnblogs.com/all-smile/p/16608503.html#hexo%E4%B8%BB%E9%A2%98</a></li><li>HEXO 官方文档</li></ul>]]></content>
      
      
      <categories>
          
          <category> 各类技巧 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Hexo </tag>
            
            <tag> 安装记录 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hello_World</title>
      <link href="/2023/01/12/hello-world-0/"/>
      <url>/2023/01/12/hello-world-0/</url>
      
        <content type="html"><![CDATA[<h4 id="for-test"><a href="#for-test" class="headerlink" title="for test"></a>for test</h4><p>* </p><ul><li>2<ul><li>3</li></ul></li></ul><p><img src="/Hello-World-0.assets/image-20230112105552573.png" alt="image-20230112105552573"></p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>Hello World</title>
      <link href="/2023/01/11/hello-world/"/>
      <url>/2023/01/11/hello-world/</url>
      
        <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
      
      
      
    </entry>
    
    
  
  
</search>
